
name: python-greetings

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs: 
  install-pip-deps:
    name: Install pip deps
    runs-on: self-hosted


    steps:
      - uses: actions/checkout@v3.5.2
      - name: Message about starting
        run: echo Pip and deps installing has started
      - uses: actions/checkout@v3.5.2
        with:
          repository: 'rinalds61/python-greetings'
          path: 'py-gre'
      - name: Install dependecies
        working-directory: py-gre
        run: pip install -r requirements.txt


  deploy-to-dev:
    name: Deploy-to-DEV
    runs-on: self-hosted
    needs: [install-pip-deps]  
    steps:
        # - name: delete
        #   run: pm2 delete all

        - name: Start app
          working-directory: py-gre
          run: "pm2 start app.py --name greetings-app-dev -- --port=7001"
          shell: cmd




          
  tests-on-dev:
    name: Tests-on-DEV
    runs-on: self-hosted
    needs: [deploy-to-dev]  
    steps:

        - uses: actions/checkout@v4
          with: 
            repository: 'mtararujs/course-js-api-framework'
            path: js-api
        - name: npm install
          working-directory: ./js-api
          run: npm install; npm audit fix --force
          

        - name: Testa izpilde sakusies
          working-directory: ./js-api
          run: npm run greetings greetings_dev


  deploy-to-staging:
    name: Deploy-to-staging
    runs-on: ubuntu-latest
    needs: [tests-on-dev]  
    steps:
        - name: Message about starting
          run: echo Deploy-to-staging has started

  tests-on-staging:
    name: Tests-on-staging
    runs-on: ubuntu-latest
    needs: [deploy-to-staging]  
    steps:      
    - name: Message about starting
      run: echo Tests-on-staging has started

  deploy-to-preprod:
    name: Deploy-to-preprod
    runs-on: ubuntu-latest
    needs: [tests-on-staging]  
    steps:      
    - name: Message about starting
      run: echo Deploy-to-preprod has started


  tests-on-preprod:
    name: Tests-on-preprod
    runs-on: ubuntu-latest
    needs: [deploy-to-preprod]  
    steps:
        - name: Message about starting
          run: echo Tests-on-preprod has started

  deploy-to-prod:
    name: deploy-to-prod
    runs-on: ubuntu-latest
    needs: [tests-on-preprod]  
    steps:
        - name: Message about starting
          run: echo deploy-to-prod has started

  test-on-prod:
    name: test-on-prod
    runs-on: ubuntu-latest
    needs: [deploy-to-prod]  
    steps:
        - name: Message about starting
          run: echo test-on-prod has started
